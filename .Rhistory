set.seed(1234)
N = 10^5
# Returns variable number claims from exponential distribution
generate_claims <- function(vector, holders = 1000, chance = 0.05, beta = 800){
# Number of claims that will occur is binomial(holders, chance)
num_of_claims <- rbinom(1, holders, chance)
# Generate claim amounts from exponential distribution for each claimant
claims <- -beta * log(runif(num_of_claims))
# Return vector of claims
return(claims)
}
# Initialize claims list
claims <- rep(list(rep(0,100)), N)
# Simulate N times
claims <- lapply(claims, generate_claims)
# Find the sum for each trial
distribution <- sapply(claims, sum)
head(discoveries)
head(distribution)
head(distribution[distribution>50000])
head(distribution>50000)
mean(distribution>50000)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if(u >= 0.30 && u < 0.50)
x <- 1 + 1
else if(u >= 0.50 && u < 0.85)
x <- 2 + 1
else if(u >= 0.85 && u < 0.1)
x <- 3 + 1
}
hist(F_inv(runif(1000)), freq = FALSE)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) & (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) & (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) & (u < 0.1))
x <- 3 + 1
}
hist(F_inv(runif(1000)), freq = FALSE)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
hist(F_inv(runif(1000)), freq = FALSE)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
F_inv(.3)
F_inv(c(.2,.1))
?apply
apply(c(.2,.3,.4), F_inv)
a <- c(.2,.3,.1)
apply(a, FUN = F_inv)
apply(a, FUN = F_inv, MARGIN = 1)
dim(z)
dim(a)
a
?as.array
apply(array(a), FUN = F_inv, MARGIN = 1)
apply(array(a), FUN = F_inv)
apply(array(a), FUN = F_inv, MARGIN = 1)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
hist(apply(array(runif(1000)), FUN = F_inv, MARGIN = 1), freq = FALSE)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
apply(array(runif(1000)), FUN = F_inv, MARGIN = 1)
runif(1000)
array(runif(1000))
apply(array(runif(1000)), FUN = F_inv, MARGIN = 1)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
apply(uniform_random, FUN = F_inv, MARGIN = 1)
apply(array(a), FUN = F_inv, MARGIN = 1)
array(a)
str(array(a))
str(uniform_random)
apply(array(a), FUN = F_inv, MARGIN = 1)
apply(array(uniform_random), FUN = F_inv, MARGIN = 1)
apply(array(c(.2,.4,.2)), FUN = F_inv, MARGIN = 1)
apply(array(runif(10)), FUN = F_inv, MARGIN = 1)
runif(10)
?sapply
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
sapply(uniform_random, FUN = F_inv, MARGIN = 1)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
sapply(uniform_random, FUN = F_inv)
F_inv <- function(u){
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
sapply(uniform_random, F_inv)
?with
length(a)
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
apply(uniform_random, FUN = F_inv)
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 0.1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
sapply(uniform_random, FUN = F_inv)
uniform_random
F_inv(.9)
F_inv(.2)
F_inv(0)
F_inv(4)
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
sapply(uniform_random, FUN = F_inv)
uniform_random <- array(runif(1000))
hist(sapply(uniform_random, FUN = F_inv))
?plot
uniform_random <- array(runif(1000))
hist(as.factor(sapply(uniform_random, FUN = F_inv)))
plot(as.factor(sapply(uniform_random, FUN = F_inv)))
hist(sapply(uniform_random, FUN = F_inv))
hist(sapply(uniform_random, FUN = F_inv), breaks = c(1:4))
hist(sapply(uniform_random, FUN = F_inv), breaks = c(0:4))
hist(sapply(uniform_random, FUN = F_inv), breaks = c(0:4), freq = FALSE)
hist(sapply(uniform_random, FUN = F_inv), breaks = c(0:4), freq = FALSE,
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
hist(sapply(uniform_random, FUN = F_inv),
breaks = c(0:4), freq = FALSE
xlab = "X",
main = "Distribution of generated X values")
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(1000))
hist(sapply(uniform_random, FUN = F_inv),
breaks = c(0:4), freq = FALSE,
xlab = "X",
main = "Distribution of generated X values")
uniform_random <- array(runif(1000))
hist(sapply(uniform_random, FUN = F_inv),
breaks = c(0:4), freq = FALSE,
xlab = "X",
main = "Distribution of generated X values",
labels = TRUE)
?plot
F_inv <- function(u){
x <- rep(0, length(u))
if(u < 0.30)
x <- 0 + 1
else if((u >= 0.30) && (u < 0.50))
x <- 1 + 1
else if((u >= 0.50) && (u < 0.85))
x <- 2 + 1
else if((u >= 0.85) && (u < 1))
x <- 3 + 1
return(x)
}
uniform_random <- array(runif(10^4))
hist(sapply(uniform_random, FUN = F_inv),
breaks = c(0:4), freq = FALSE,
xlab = "X",
main = "Distribution of generated X values",
labels = TRUE,
sub = "10,000 generated values")
2. If $u < .30$, set $x = 1$ and stop
N <- 10
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 < 0.55])+6
N <- 10
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
N <- 10
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55]
uniform1 < 0.55
uniform2[uniform1 < 0.55]
2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist
x_dist[x_dist == 0]
N <- 10
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
hist(x_dist)
table(x_dist)
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
hist(x_dist)
hist(x_dist, labels = TRUE)
N <- 10^2
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
uniform1 < 0.55
x_dist[uniform1 < 0.55]
2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist
x_dist[x_dist == 0]
2*floor(5*uniform2[x_dist == 0])+6
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
x_dist
N <- 10^2
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
hist(x_dist, labels = TRUE)
N <- 10^3
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
hist(x_dist, labels = TRUE)
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[x_dist == 0])+6
hist(x_dist, labels = TRUE)
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
N <- 10^2
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
N <- 10^2
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
N <- 10^2
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
table(x_dist)
N <- 10^3
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
hist(x_dist, labels = TRUE)
str(x_dist)
table(x_dist)
plot(table(x_dist))
install.packages("arm")
library(arm)
discrete.histogram(x_dist)
?discrete.hist
discrete.histogram(x_dist, bar.width = 0.5)
discrete.histogram(x_dist, bar.width = 1)
discrete.histogram(x_dist, bar.width = .9)
discrete.histogram(x_dist, bar.width = .9, prob.col = "white")
discrete.histogram(x_dist, bar.width = .9, prob.col = "grey")
hist(x_dist)
hist(x_dist, freq = FALSE,
labels = TRUE, breaks = .9)
4.9:14.9
hist(x_dist, freq = FALSE,
labels = TRUE, breaks = 4.9:14.9)
library(ggplot2)
hist(x_dist, freq = FALSE,
labels = TRUE, breaks = 4.9:14.9)
axis(1, at=5:14, labels=5:14)
hist(x_dist, freq = FALSE,
labels = TRUE, breaks = 4.9:14.9)
axis(1, at=(5:14)+.5, labels=5:14)
hist(x_dist, freq = FALSE,
labels = TRUE, breaks = 4.9:14.9,
xaxt = "n")
axis(1, at=(5:14)+.5, labels=5:14)
N <- 10^4
alpha <- 0.55
uniform1 <- runif(N)
uniform2 <- runif(N)
x_dist <- c(rep(0, N))
x_dist[uniform1 < 0.55] <- 2*floor(5*uniform2[uniform1 < 0.55])+5
x_dist[x_dist == 0] <- 2*floor(5*uniform2[uniform1 >= 0.55])+6
table(x_dist)
